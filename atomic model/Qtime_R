# 加载必要的库
library(plotly)
library(dplyr)
library(tidyr)
library(purrr)

# 在PowerBI的R脚本中，数据自动作为"dataset"加载
# 确保列名匹配你的实际数据

# 计算唯一站点数量
unique_sites <- unique(dataset$OPE_NO)
cat("一共有", length(unique_sites), "个不同的站点\n")
cat("站点编号列表:", paste(unique_sites, collapse=", "), "\n")

# 创建一个函数来为每个站点生成子图
create_site_plot <- function(site_id) {
  # 过滤出当前站点的数据并按WEEK排序
  site_data <- dataset %>% 
    filter(OPE_NO == site_id) %>%
    arrange(WEEK)
  
  # 创建交互式图表
  p <- plot_ly(data = site_data) %>%
    add_trace(
      x = ~WEEK, 
      y = ~AVG_WAIT, 
      type = 'scatter', 
      mode = 'lines+markers',
      line = list(shape = 'spline', smoothing = 1.3, width = 3, color = 'blue'),
      marker = list(size = 8, color = 'blue'),
      name = 'AVG_WAIT'
    ) %>%
    add_trace(
      x = ~WEEK, 
      y = ~MAX_WAIT, 
      type = 'scatter', 
      mode = 'lines+markers',
      line = list(shape = 'spline', smoothing = 1.3, width = 3, color = 'red'),
      marker = list(size = 8, color = 'red'),
      name = 'MAX_WAIT'
    ) %>%
    layout(
      title = paste0('站点 ', site_id, ' 等待时间'),
      xaxis = list(title = '周', tickangle = 45),
      yaxis = list(title = '等待时间'),
      hovermode = 'closest',
      showlegend = TRUE
    )
  
  return(p)
}

# 方案1: 如果站点数量较少，创建一个带有子图的大图表
if(length(unique_sites) <= 9) {
  # 确定子图布局
  n_cols <- min(3, length(unique_sites))
  n_rows <- ceiling(length(unique_sites) / n_cols)
  
  # 创建一个包含所有子图的列表
  plot_list <- map(unique_sites, create_site_plot)
  
  # 合并为一个大图表
  combined_plot <- subplot(
    plot_list,
    nrows = n_rows,
    shareX = FALSE,
    shareY = FALSE,
    titleX = TRUE,
    titleY = TRUE
  ) %>%
    layout(
      title = '各站点等待时间趋势',
      showlegend = TRUE,
      legend = list(orientation = 'h', x = 0.5, y = 1.05, xanchor = 'center'),
      margin = list(t = 80)
    )
  
  combined_plot
} else {
  # 方案2: 如果站点太多，创建一个带有下拉选择器的图表
  # 创建一个初始图表
  initial_site <- unique_sites[1]
  initial_plot <- create_site_plot(initial_site)
  
  # 添加下拉选择器
  site_dropdown <- list(
    buttons = map(unique_sites, function(site) {
      list(
        method = "update",
        args = list(
          list(visible = unique_sites == site),
          list(title = paste0('站点 ', site, ' 等待时间'))
        ),
        label = paste0('站点 ', site)
      )
    }),
    direction = "down",
    active = 0,
    x = 0.1,
    y = 1.15,
    xanchor = 'left',
    yanchor = 'top'
  )
  
  # 应用下拉选择器
  dropdown_plot <- initial_plot %>%
    layout(
      updatemenus = list(site_dropdown),
      margin = list(t = 120)
    )
  
  # 为所有其他站点创建隐藏的轨迹
  for(i in 2:length(unique_sites)) {
    site_data <- dataset %>% 
      filter(OPE_NO == unique_sites[i]) %>%
      arrange(WEEK)
    
    dropdown_plot <- dropdown_plot %>%
      add_trace(
        x = site_data$WEEK, 
        y = site_data$AVG_WAIT, 
        type = 'scatter', 
        mode = 'lines+markers',
        line = list(shape = 'spline', smoothing = 1.3, width = 3, color = 'blue'),
        marker = list(size = 8, color = 'blue'),
        name = 'AVG_WAIT',
        visible = FALSE
      ) %>%
      add_trace(
        x = site_data$WEEK, 
        y = site_data$MAX_WAIT, 
        type = 'scatter', 
        mode = 'lines+markers',
        line = list(shape = 'spline', smoothing = 1.3, width = 3, color = 'red'),
        marker = list(size = 8, color = 'red'),
        name = 'MAX_WAIT',
        visible = FALSE
      )
  }
  
  dropdown_plot
}
