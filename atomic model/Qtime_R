# 加载必要的库
library(plotly)
library(dplyr)
library(tidyr)
library(purrr)

# 创建测试数据集（替代读取Excel文件）
dataset <- data.frame(
  OPE_NO = rep(c("站点1", "站点2", "站点3", "站点4", "站点5", 
                 "站点6", "站点7", "站点8", "站点9", "站点10"), each = 5),
  WEEK = rep(paste0("W", 513:517), 10),
  AVG_WAIT = round(runif(50, 2, 10), 2),
  MAX_WAIT = round(runif(50, 8, 20), 2)
)

# 查看数据前几行
head(dataset)

# 计算唯一站点数量
unique_sites <- unique(dataset$OPE_NO)
cat("一共有", length(unique_sites), "个不同的站点\n")
cat("站点编号列表:", paste(unique_sites, collapse=", "), "\n")

# 创建一个函数来为每个站点生成子图
create_site_plot <- function(site_id) {
  # 过滤出当前站点的数据并按WEEK排序
  site_data <- dataset %>% 
    filter(OPE_NO == site_id) %>%
    arrange(WEEK)
  
  # 创建交互式图表
  p <- plot_ly(data = site_data) %>%
    add_trace(
      x = ~WEEK, 
      y = ~AVG_WAIT, 
      type = 'scatter', 
      mode = 'lines+markers',
      line = list(shape = 'spline', smoothing = 1.3, width = 3, color = 'blue'),
      marker = list(size = 8, color = 'blue'),
      name = 'AVG_WAIT'
    ) %>%
    add_trace(
      x = ~WEEK, 
      y = ~MAX_WAIT, 
      type = 'scatter', 
      mode = 'lines+markers',
      line = list(shape = 'spline', smoothing = 1.3, width = 3, color = 'red'),
      marker = list(size = 8, color = 'red'),
      name = 'MAX_WAIT'
    ) %>%
    layout(
      title = paste0('站点 ', site_id, ' 等待时间'),
      xaxis = list(title = '周', tickangle = 45),
      yaxis = list(title = '等待时间'),
      hovermode = 'closest',
      showlegend = TRUE
    )
  
  return(p)
}

# 简化版本 - 直接使用固定布局，避免可能的错误
if(length(unique_sites) <= 25) {
  # 为10个站点固定使用2行5列布局
  n_rows <- 2
  n_cols <- 5
  
  cat("使用固定布局:", n_rows, "行 x", n_cols, "列\n")
  
  # 创建一个包含所有子图的列表
  plot_list <- lapply(unique_sites, create_site_plot)
  
  # 使用更安全的subplot方法
  tryCatch({
    # 尝试创建子图
    combined_plot <- subplot(
      plot_list,
      nrows = n_rows,
      shareX = FALSE,
      shareY = FALSE
    ) %>%
      layout(
        title = '各站点等待时间趋势',
        showlegend = TRUE,
        margin = list(t = 80)
      )
    
    # 显示图表
    print(combined_plot)
  }, error = function(e) {
    # 如果出错，打印错误信息并尝试备用方法
    cat("创建子图时出错:", e$message, "\n")
    cat("尝试备用方法...\n")
    
    # 备用方法: 使用简单图表
    simple_plot <- create_site_plot(unique_sites[1])
    print(simple_plot)
  })
  
} else {
  # 下拉菜单方式保持不变
  initial_site <- unique_sites[1]
  initial_plot <- create_site_plot(initial_site)
  
  # 添加下拉选择器
  site_dropdown <- list(
    buttons = map(unique_sites, function(site) {
      list(
        method = "update",
        args = list(
          list(visible = rep(FALSE, length(unique_sites) * 2)),
          list(title = paste0('站点 ', site, ' 等待时间'))
        ),
        label = paste0('站点 ', site)
      )
    }),
    direction = "down",
    active = 0,
    x = 0.1,
    y = 1.15,
    xanchor = 'left',
    yanchor = 'top'
  )
  
  # 修复下拉选择器的visible属性设置
  for(i in seq_along(unique_sites)) {
    site <- unique_sites[i]
    # 更新该站点的visible属性
    visible_vec <- rep(FALSE, length(unique_sites) * 2)
    visible_vec[(i-1)*2 + 1] <- TRUE  # AVG_WAIT trace
    visible_vec[(i-1)*2 + 2] <- TRUE  # MAX_WAIT trace
    site_dropdown$buttons[[i]]$args[[1]] <- list(visible = visible_vec)
  }
  
  # 应用下拉选择器
  dropdown_plot <- initial_plot %>%
    layout(
      updatemenus = list(site_dropdown),
      margin = list(t = 120)
    )
  
  # 为所有其他站点创建隐藏的轨迹
  for(i in 2:length(unique_sites)) {
    site_data <- dataset %>% 
      filter(OPE_NO == unique_sites[i]) %>%
      arrange(WEEK)
    
    dropdown_plot <- dropdown_plot %>%
      add_trace(
        x = site_data$WEEK, 
        y = site_data$AVG_WAIT, 
        type = 'scatter', 
        mode = 'lines+markers',
        line = list(shape = 'spline', smoothing = 1.3, width = 3, color = 'blue'),
        marker = list(size = 8, color = 'blue'),
        name = 'AVG_WAIT',
        visible = FALSE
      ) %>%
      add_trace(
        x = site_data$WEEK, 
        y = site_data$MAX_WAIT, 
        type = 'scatter', 
        mode = 'lines+markers',
        line = list(shape = 'spline', smoothing = 1.3, width = 3, color = 'red'),
        marker = list(size = 8, color = 'red'),
        name = 'MAX_WAIT',
        visible = FALSE
      )
  }
  
  # 显示图表
  print(dropdown_plot)
}
