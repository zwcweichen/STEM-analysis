# 加载必要的库
library(plotly)
library(dplyr)
library(tidyr)
library(purrr)

# 创建测试数据集（替代读取Excel文件）
dataset <- data.frame(
  OPE_NO = rep(c("站点1", "站点2", "站点3", "站点4", "站点5", 
                 "站点6", "站点7", "站点8", "站点9", "站点10"), each = 5),
  WEEK = rep(paste0("W", 513:517), 10),
  AVG_WAIT = round(runif(50, 2, 10), 2),
  MAX_WAIT = round(runif(50, 8, 20), 2)
)

# 查看数据前几行
head(dataset)

# 计算唯一站点数量
unique_sites <- unique(dataset$OPE_NO)
cat("一共有", length(unique_sites), "个不同的站点\n")
cat("站点编号列表:", paste(unique_sites, collapse=", "), "\n")

# 创建一个函数来为每个站点生成子图
create_site_plot <- function(site_id, show_legend = FALSE) {
  # 过滤出当前站点的数据并按WEEK排序
  site_data <- dataset %>% 
    filter(OPE_NO == site_id) %>%
    arrange(WEEK)
  
  # 创建交互式图表
  p <- plot_ly(data = site_data) %>%
    add_trace(
      x = ~WEEK, 
      y = ~AVG_WAIT, 
      type = 'scatter', 
      mode = 'lines+markers',
      line = list(shape = 'spline', smoothing = 1.3, width = 3, color = 'blue'),
      marker = list(size = 8, color = 'blue'),
      name = 'AVG_WAIT',
      showlegend = show_legend  # 只在指定时显示图例
    ) %>%
    add_trace(
      x = ~WEEK, 
      y = ~MAX_WAIT, 
      type = 'scatter', 
      mode = 'lines+markers',
      line = list(shape = 'spline', smoothing = 1.3, width = 3, color = 'red'),
      marker = list(size = 8, color = 'red'),
      name = 'MAX_WAIT',
      showlegend = show_legend  # 只在指定时显示图例
    ) %>%
    layout(
      title = list(
        text = paste0('<b>站点 ', site_id, '</b>'),
        font = list(size = 14),
        y = 0.95
      ),
      xaxis = list(title = '周', tickangle = 45),
      yaxis = list(title = '等待时间'),
      hovermode = 'closest',
      margin = list(t = 50)
    )
  
  return(p)
}

# 简化版本 - 直接使用固定布局，避免可能的错误
if(length(unique_sites) <= 25) {
  # 为10个站点固定使用2行5列布局
  n_rows <- 2
  n_cols <- 5
  
  cat("使用固定布局:", n_rows, "行 x", n_cols, "列\n")
  
  # 创建一个包含所有子图的列表 - 只为第一个子图显示图例
  plot_list <- lapply(seq_along(unique_sites), function(i) {
    site_id <- unique_sites[i]
    # 只让第一个子图显示图例
    show_legend <- (i == 1)
    create_site_plot(site_id, show_legend)
  })
  
  # 使用更安全的subplot方法
  tryCatch({
    # 尝试创建子图
    combined_plot <- subplot(
      plot_list,
      nrows = n_rows,
      shareX = FALSE,
      shareY = FALSE,
      titleX = TRUE,
      titleY = TRUE,
      margin = 0.07
    ) %>%
      layout(
        title = list(
          text = '<b>各站点等待时间趋势</b>',
          font = list(size = 18)
        ),
        showlegend = TRUE,
        legend = list(
          orientation = 'h',      # 水平图例
          x = 0.5,                # 水平居中
          y = 1.02,               # 放在图表上方
          xanchor = 'center',     # 锚点居中
          font = list(size = 12)  # 图例字体大小
        ),
        margin = list(t = 100, l = 60, r = 30, b = 60)
      )
    
    # 显示图表
    print(combined_plot)
  }, error = function(e) {
    # 如果出错，打印错误信息并尝试备用方法
    cat("创建子图时出错:", e$message, "\n")
    cat("尝试备用方法...\n")
    
    # 备用方法: 使用简单图表
    simple_plot <- create_site_plot(unique_sites[1], TRUE)
    print(simple_plot)
  })
  
} else {
  # 下拉菜单方式保持不变...
  # (下拉菜单部分代码保持不变)
}
